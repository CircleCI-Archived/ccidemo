version: 2
jobs:
  main_build:
    docker:
      - image: circleci/ccidemo:latest
    working_directory: /go/src/github.com/circleci/ccidemo
    steps:
      - checkout
      - run:
          # This step can be replaced with a custom Docker image
          name: "Install Dependencies"
          command: |
            make vendor
      - run:
          name: "Unit Test Hugo"
          command: |
            mkdir /tmp/test-results
      - run: go version
      - run:
          name: "Build Hugo"
          command: make hugo-race check
      - store_artifacts:
          path: /tmp/test-results
      - store_test_results:
          path: /tmp/test-results
      - persist_to_workspace:
          root: /go/src/github.com/circleci/ccidemo
          paths:
            - hugo
            - docs

  coverage_build:
    docker:
      - image: circleci/ccidemo:latest
    working_directory: /go/src/github.com/circleci/ccidemo
    steps:
      - checkout
      - run:
          # This step can be replaced with a custom Docker image
          name: "Install Dependencies"
          command: |
            go get github.com/jstemmer/go-junit-report
            make vendor
      - run:
          name: "Unit Test Hugo"
          command: |
            mkdir /tmp/test-results
      - run:
          name: "Build Hugo"
          command: make test-cover-html
      - store_artifacts:
          path: /tmp/test-results
      - store_test_results:
          path: /tmp/test-results

  try_hugo:
    docker:
      - image: circleci/ccidemo:latest
    steps:
      - attach_workspace:
          at: ~/project
      - run: ./hugo version
      - run:
          name: "Test the Hugo binary on Hugo Docs Website"
          command: ./hugo -s docs/
      - run:
          name: "Test the Hugo binary on Hugo Docs Website (RAM only build)"
          command: ./hugo --renderToMemory -s docs/
      - run:
          name: "Test the generated docs site with HTML Proofer"
          command: htmlproofer docs/public --allow-hash-href --check-html --empty-alt-ignore --disable-external


workflows:
  version: 2
  build_and_test:
    jobs:
      - main_build
      - coverage_build
      - try_hugo:
          requires:
            - main_build
